{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","fullTodos","App","useState","newTodoTitle","setNewTodoTitle","selectedUserId","setSelectedUserId","setTodos","hasTitleError","setHasTitleError","hasSelectedUserError","setHasSelectedUserError","action","method","onSubmit","event","preventDefault","trimedNewTitle","trim","newTodo","reduce","prev","curr","htmlFor","type","value","placeholder","onChange","eventValue","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb33aea2.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({\n  user: {\n    name,\n    email,\n  },\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\nimport { FullTodo } from '../../types/FullTodo';\n\ntype Props = {\n  todo: FullTodo;\n};\n\nexport const TodoInfo: FC<Props> = ({\n  todo: {\n    title,\n    completed,\n    user,\n    id,\n  },\n}) => (\n  <article\n    data-id={id}\n    className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': completed,\n      },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">{title}</h2>\n\n    {user && <UserInfo user={user} />}\n  </article>\n);\n","import { FC } from 'react';\nimport { FullTodo } from '../../types/FullTodo';\nimport { TodoInfo } from '../TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: FullTodo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => (\n  <ul className=\"TodoList\">\n    {todos.map(todo => (\n      <li\n        key={todo.id}\n      >\n        <TodoInfo\n          todo={todo}\n        />\n      </li>\n    ))}\n\n  </ul>\n);\n","import {\n  ChangeEvent,\n  FC,\n  FormEvent,\n  useState,\n} from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { FullTodo } from './types/FullTodo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const fullTodos: FullTodo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<FullTodo[]>(fullTodos);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasSelectedUserError, setHasSelectedUserError] = useState(false);\n\n  const resetForm = () => {\n    setNewTodoTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleFormSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    const trimedNewTitle = newTodoTitle.trim();\n\n    setHasTitleError(!trimedNewTitle);\n    setHasSelectedUserError(!selectedUserId);\n\n    if (!trimedNewTitle || !selectedUserId) {\n      return;\n    }\n\n    const MaxIdTodo = todos.reduce((prev, curr) => (\n      prev.id > curr.id ? prev : curr\n    ));\n    const newTodo = {\n      id: MaxIdTodo.id + 1,\n      title: newTodoTitle,\n      completed: false,\n      userId: selectedUserId,\n      user: getUser(+selectedUserId),\n    };\n\n    setTodos([...todos, newTodo]);\n    resetForm();\n  };\n\n  const handleNewTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const eventValue = event.target.value.replace(/[^a-zа-я\\s\\d]/gi, '');\n\n    setNewTodoTitle(eventValue);\n    setHasTitleError(!eventValue);\n  };\n\n  const handleNewUserChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const eventValue = event.target.value;\n\n    setSelectedUserId(+eventValue);\n    setHasSelectedUserError(!+eventValue);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              id=\"titleInput\"\n              value={newTodoTitle}\n              placeholder=\"Enter a title\"\n              onChange={handleNewTitleChange}\n            />\n          </label>\n\n          {hasTitleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userInput\">\n            User:\n            <select\n              data-cy=\"userSelect\"\n              id=\"userInput\"\n              value={selectedUserId}\n              onChange={handleNewUserChange}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n\n              {usersFromServer.map(({ id, name }) => (\n                <option\n                  key={id}\n                  value={id}\n                >\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {hasSelectedUserError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}